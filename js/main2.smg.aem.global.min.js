/*!
 * samsung.com - Phase2 - Javascript Namespace Defined
 * src : js/src/smg/aem/namespace.js
 *
 * @version 1.0.0
 * @since 2016.02.01
 */
;(function(win) {
	'use strict';

	if('undefined' === typeof win.smg) {
		/**
		 * samsung.com namespace
		 * @name  window.smg
		 * @namespace
		 */
		win.smg = {};
	}

	/**
	 * Phase2 AEM Namespace
	 * @name  window.smg.aem
	 * @namespace
	 */
	win.smg.aem = win.smg.aem || {};

	/**
	 * Phase2 AEM Static Values Defined
	 */
	win.smg.aem.varStatic = win.smg.aem.varStatic || {};

	/**
	 * Phase2 AEM Custom Events Defined
	 */
	win.smg.aem.customEvent = win.smg.aem.customEvent || {};

	/**
	 * Phase2 AEM Utility Script Defined
	 */
	win.smg.aem.util = win.smg.aem.util || {};

	/**
	 * Phase2 AEM Common Script Defined
	 */
	win.smg.aem.common = win.smg.aem.common || {};

	/**
	 * Phase2 AEM Components Namespace
	 * @name  window.smg.aem.components
	 * @namespace
	 */
	win.smg.aem.components = win.smg.aem.components || {};

	/**
	 * Phase2 Home Components Namespace
	 * @name  window.smg.aem.components.home
	 * @namespace
	 */
	win.smg.aem.components.home = win.smg.aem.components.home || {};

	/**
	 * Phase2 AboutSamsung Components Namespace
	 * @name  window.smg.aem.components.aboutsamsung
	 * @namespace
	 */
	win.smg.aem.components.aboutsamsung = win.smg.aem.components.aboutsamsung || {};

	/**
	 * Phase2 AEM Templates Namespace
	 * @name  window.smg.aem.templates
	 * @namespace
	 */
	win.smg.aem.templates = win.smg.aem.templates || {};

	/**
	 * Phase2 Home Templates Namespace
	 * @name  window.smg.aem.templates.home
	 * @namespace
	 */
	win.smg.aem.templates.home = win.smg.aem.templates.home || {};
})(window);
/*!
 * samsung.com - Phase2 - Utility Script Defined
 * src : js/src/smg/aem/static/smg.aem.util.js
 *
 * @version 1.0.0
 * @since 2016.02.04
 */
;(function(win, $) {
	'use strict';

	if('undefined' === typeof win.smg) {
		win.smg = {};
	}

	if('undefined' === typeof win.smg.aem) {
		win.smg.aem = {};
	}

	if('undefined' === typeof win.smg.aem.util) {
		win.smg.aem.util = {};
	}

	var hasOwnProperty = Object.prototype.hasOwnProperty,
	doc = win.document;

	/**
	 * @name window.smg.aem.util
	 * @namespace
	 * @requires jQuery
	 * @requires namespace.js
	 */
	win.smg.aem.util = (function() {
		return {
			isArray : function(arr) {
				return 'array' === $.type(arr);
			},
			def : function(org, src) {
				for (var prop in src) {
					if (!hasOwnProperty.call(src, prop)) continue;
					if ('object' === $.type(org[prop])) {
						org[prop] = (this.isArray(org[prop]) ? src[prop].slice(0) : this.def(org[prop], src[prop]));
					} else {
						org[prop] = src[prop];
					}
				}
				return org;
			},
			winSize : function() {
				var win_wh = {
					w : win.innerWidth || doc.documentElement.clientWidth || doc.body.clientWidth,
					h : win.innerHeight || doc.documentElement.clientHeight || doc.body.clientHeight
				};
				return win_wh;
			},
			getQueryStr : function(href) {
				href = href || win.location.href;
				
				var vars = {};
				href.replace(/[?&]+([^=&]+)=([^&]*)/gi, function(m,key,value) {
					vars[key] = value;
				});
				return vars;
			},
			winOpener : function(args) {
				var defParams =   {
					url 		: 'http://www.samsung.com',
					name 		: 'smg_opener_' + new Date().getTime(),
					width 		: 400,
					height 		: 400,
					left 		: null,
					top 		: null,
					scrollbars	: 'no',
					toolbar 	: 'no',
					location 	: 'no',
					directories : 'no',
					status 		: 'no',
					menubar 	: 'no',
					resizable 	: 'no'
				}, opener, setting, options;

				options 		= win.smg.util.def(defParams, (args || {}));
				options.left 	= options.left || ( screen.width / 2 - options.width / 2 );
				options.top 	= options.top || ( screen.height / 2 - options.height / 2 );
				setting = '';

				for( var prop in options ) {
					if( prop != 'url' && prop != 'name' ) {
						setting += ',' + prop + '=' + options[ prop ];
					}
				}
				setting = setting.substr( 1, setting.length );
				opener = window.open( options.url, options.name, setting );
				return opener;
			},
			imgLoader : function(img, callback) {
				img.each(function() {
					var cb = (callback || function() {});
					/*for IE 10-*/
					if (this.complete || $(this).height() > 0) {
						cb.apply(img);
					} else {
						$(this).load(function() {
							cb.apply(img);
						});
					}
				});
			},
			vwOrientationUpdate : function(css) {
				$(win).on('orientationchange', function() {
					var vwElem = $(css || '.js-vw');
					if (!vwElem.size()) {
						return;
					}
					vwElem.css('display', 'none').height();
					vwElem.css('display', '');
				});
			},
			iPadVWRender : function() {
				if (navigator.userAgent.match(/iPad/i)) {
					this.vwOrientationUpdate('.js-vw');
				}
			},
			Cookie : function() {
				var defParams = {
					expires : '', path: '/', domain : '', secure : ''
				};

				return {
					setCookie : function(cname, cvalue, exdays) {
						var d = new Date();
						d.setTime(d.getTime() + ((exdays || 0) * 24 * 60 * 60 * 1000));

						var opt = win.smg.aem.util.def(defParams, { expires : d });				
						document.cookie = [
							cname, '=', cvalue, 
							opt.expires ? '; expires=' + opt.expires.toUTCString() : '',
							opt.path    ? '; path=' + opt.path : '',
							opt.domain  ? '; domain=' + opt.domain : '',
							opt.secure  ? '; secure' : ''
						].join('');				
					},
					getCookie : function(cname) {
						var name = cname + '=',
						ca = document.cookie.split(';'),
						c;

						for(var i=0, leng=ca.length; i<leng; i++) {
							c = ca[i];
							while (c.charAt(0)==' ') {
								c = c.substring(1);
							}
							if (c.indexOf(name) != -1) {
								return c.substring(name.length,c.length);
							}
						}
						return '';
					}
				};
			},
			loadCSS : function(urls, cb, nocache) {
				if (!urls || 'string' === $.type(urls)) urls = [urls];

				var head = $('head'), dfds = [];
				$.map(urls, function(url) {
					var _dfd = $.Deferred();
					dfds.push(_dfd);
					$('<link>').attr({
						'rel' : 'stylesheet', type : 'text/css',
						href : url + (!!nocache ? '?_ts=' + new Date().getTime() : '')
					}).appendTo(head).load(function() {
						_dfd.resolve();
					});
				});

				$.when.apply($, dfds).done(function() {
					if ($.isFunction(cb)) cb();
				});
			},
			getServerTime : function(callBack, serverUrl) {
				serverUrl = serverUrl || window.location.href.toString();
				callBack = callBack || function() {};

				$.ajax({
					url : serverUrl,
					async : false,
					cashe : false
				})
				.done(function(res, status, xhr) {
					callBack(new Date(xhr.getResponseHeader('Date')));
				});
			},
			getRestrictBytes : function(str, maxBytes) {
				var strLeng = str.length,
				rByte = 0,
				rLen = 0,
				strChar = '';

				maxBytes = maxBytes || 100;

				for (var i=0; i<strLeng; i++) {
					strChar = str.charAt(i);
					if (escape(strChar).length > 4) {
						rByte += 2;
					} else {
						rByte++;
					}

					if(rByte <= maxBytes) {
						rLen = i+1;
					}
				}

				return {
					bytes : rByte,
					rectLeng : rLen
				}
			},
			isAemEditMode : function() {
				var flag = false;
				if (win.parent && win.frameElement && $(win.parent.document).find('.foundation-authoring-ui-mode').size()) {
					flag = true;
				}
				return flag;
			}
		};
	})();

	win.smg.aem.util.cookie = new win.smg.aem.util.Cookie();

	$(function() {
		win.smg.aem.util.iPadVWRender();
	});
})(window, window.jQuery);
/*!
 * samsung.com - Phase2 - Static Values Defined
 * src : js/src/smg/aem/static/smg.aem.static.js
 *
 * @version 1.0.0
 * @since 2016.02.04
 */
;(function(win) {
	'use strict';

	if('undefined' === typeof win.smg) {
		win.smg = {};
	}

	if('undefined' === typeof win.smg.aem) {
		win.smg.aem = {};
	}

	if('undefined' === typeof win.smg.aem.varStatic) {
		win.smg.aem.varStatic = {};
	}

	/**
	 * @name window.smg.aem.varStatic
	 * @namespace
	 * @requires namespace.js
	 */
	win.smg.aem.varStatic = {
		CSS : {			
			VIDEO_OPEN : 'video-open',
			
			SEARCH_POS : 'search-pos',
			NAV_OPEN : 'nav-open',
			NAV_CLOSE : 'nav-close',

			HAS_ANIMATED : 'has-animated',
			
			IS_SHOW : 'is-show',
			IS_HIDE : 'is-hide',
			IS_OPEN : 'is-open',
			IS_SELECT : 'is-select',

			JS_IMG_SRC : 'js-img-src',
			JS_IMG_LAZY : 'js-img-lazy',
			JS_IMG_LAZY_LOADED : 'js-img-lazy-loaded',

			LAZY_LOADED : 'lazy-loaded',

			SWITCH_MOBILE : 'switch-mobile',
			SWITCH_TABLET : 'switch-tablet'
		},
		DATA_ATTR : {
			SRC_PC : 'data-src-pc',
			SRC_MOBILE : 'data-src-mobile',
			DATA_SRC : 'data-src'
		},
		SUPPORT : {
			NO_SVG : 'no-svg',
			NO_CSS3 : 'no-css3',
			IE_LT_8 : 'lt-ie8',
			COOKIE_WARNING : 'cookie-warning',
			TOUCH_DEVICE : 'touch-device'
		},
		RESPONSIVE : {
			DESKTOP : {
				NAME : 'desktop'
			},
			TABLET : {
				NAME : 'tablet',
				WIDTH : 1280
			},
			MOBILE : {
				NAME : 'mobile',
				WIDTH : 768
			},
			MIN_MOBILE : {
				NAME : 'min_mobile',
				WIDTH : 320
			},
			GNB : {
				NAME : 'gnb_reponsive',
				WIDTH : 1024
			}
		}
	};

})(window);
/*!
 * samsung.com - Phase2 - Custom Events Defined
 * src : js/src/smg/aem/event/smg.aem.event.js
 *
 * @version 1.0.0
 * @since 2016.02.04
 */
;(function(win) {
	'use strict';

	if('undefined' === typeof win.smg) {
		win.smg = {};
	}

	if('undefined' === typeof win.smg.aem) {
		win.smg.aem = {};
	}

	if('undefined' === typeof win.smg.aem.customEvent) {
		win.smg.aem.customEvent = {};
	}

	/**
	 * @name window.smg.aem.customEvent
	 * @namespace
	 * @requires namespace.js
	 */
	win.smg.aem.customEvent = {
		VIDEO : {
			PLAY : 'AEM_VIDEO_PLAY',
			CLOSE : 'AEM_VIDEO_CLOSE'
		},
		RESPONSIVE : {
			GET_STATUS : 'AEM_RESPONSIVE_GET_STATUS',
			CHANGE : 'AEM_RESPONSIVE_CHANGE'
		}
	};

})(window);
/*!
 * samsung.com - Phase2 - Common Script Defined
 * src : js/src/smg/aem/common/smg.aem.common.js
 *
 * @version 1.0.0
 * @since 2016.02.04
 */
;(function(win, $) {
	'use strict';

	if('undefined' === typeof win.smg) {
		win.smg = {};
	}

	if('undefined' === typeof win.smg.aem) {
		win.smg.aem = {};
	}

	if('undefined' === typeof win.smg.aem.common) {
		win.smg.aem.common = {};
	}

	// Static Values
	var V_STATIC = win.smg.aem.varStatic,
	// Utility Script
	UTIL = win.smg.aem.util,
	// Custom Events
	CST_EVENT = win.smg.aem.customEvent;

	/**
	 * @name window.smg.aem.common
	 * @namespace
	 * @requires jQuery
	 * @requires namespace.js
	 * @requires window.smg.aem.static.js
	 * @requires window.smg.aem.util.js
	 * @requires window.smg.aem.event.js
	 */
	win.smg.aem.common = (function() {
		return {
			init : function() {
				this.detection();

				this.responsiveName = '';
				this.responsiveNameEx = '';
				this.responsiveGNB = '';
				this.responsiveGNBEx = '';

				$('body').on(CST_EVENT.RESPONSIVE.GET_STATUS, $.proxy(this.resizeListener, this));
				$(win).on('resize', $.proxy(this.resizeListener, this));
				this.resizeListener();

				return this;
			},
			detection : function() {
				// SVG Support Check
				if (!document.implementation.hasFeature('http://www.w3.org/TR/SVG11/feature#Image', '1.1')) {
					$('body').addClass(V_STATIC.SUPPORT.NO_SVG);
				}

				// IE lt 8 Check
				if (document.all && !document.addEventListener) {
					$('body').addClass(V_STATIC.SUPPORT.IE_LT_8);
				}

				// CSS3 Support Check
				var thisBody = document.body || document.documentElement,
				thisStyle = thisBody.style,
				css3support = thisStyle.transition !== undefined || thisStyle.WebkitTransition !== undefined || thisStyle.MozTransition !== undefined || thisStyle.MsTransition !== undefined || thisStyle.OTransition !== undefined;
				if (!css3support) {
					$('body').addClass(V_STATIC.SUPPORT.NO_CSS3);
				}

				// Touch Support Check
				var supportsTouch = (('ontouchstart' in window) || (navigator.MaxTouchPoints > 0) || (navigator.msMaxTouchPoints > 0));
				if (supportsTouch) {
					$('body').addClass(V_STATIC.SUPPORT.TOUCH_DEVICE);
				}
			},
			resizeListener : function(e) {
				var winWidth = UTIL.winSize().w;

				if (winWidth <= V_STATIC.RESPONSIVE.MOBILE.WIDTH) {
					this.responsiveName = V_STATIC.RESPONSIVE.MOBILE.NAME;
				} else if (winWidth <= V_STATIC.RESPONSIVE.TABLET.WIDTH) {
					this.responsiveName = V_STATIC.RESPONSIVE.TABLET.NAME;
				} else {
					this.responsiveName = V_STATIC.RESPONSIVE.DESKTOP.NAME;
				}

				if (winWidth <= V_STATIC.RESPONSIVE.GNB.WIDTH) {
					this.responsiveGNB = V_STATIC.RESPONSIVE.GNB.NAME;
				} else {
					this.responsiveGNB = '';
				}

				if (this.responsiveName !== this.responsiveNameEx || this.responsiveGNB !== this.responsiveGNBEx) {
					this.responsiveNameEx = this.responsiveName;
					this.responsiveGNBEx = this.responsiveGNB;
					$('body').trigger(CST_EVENT.RESPONSIVE.CHANGE, { RESPONSIVE_NAME : this.responsiveName, RESPONSIVE_GNB_NAME : this.responsiveGNB, isMobile : winWidth <= V_STATIC.RESPONSIVE.MOBILE.WIDTH });
				}

				if (e && e.type === CST_EVENT.RESPONSIVE.GET_STATUS) {
					$('body').trigger(CST_EVENT.RESPONSIVE.CHANGE, { RESPONSIVE_NAME : this.responsiveName, RESPONSIVE_GNB_NAME : this.responsiveGNB, isMobile : winWidth <= V_STATIC.RESPONSIVE.MOBILE.WIDTH });
				}
			}
		};
	})();

	var common;
	$(function() {
		common = win.smg.aem.common.init();
	});

	// confrict samsung.min.js - resize
	$(win).on('resize', function(e) {
		if (!common || !common.resizeListener) return;
		common.resizeListener.call(common, e);
	});
})(window, window.jQuery);
/*!
 * samsung.com - Phase2 - Accessibility Checkbox Script
 * src : js/src/smg/aem/accessibility/placehoder/smg.aem.acc.checkbox.js
 *
 * @version 1.0.0
 * @since 2016.02.04
 */
;(function(win, $) {
	'use strict';

	if('undefined' === typeof win.smg) {
		win.smg = {};
	}

	if('undefined' === typeof win.smg.aem) {
		win.smg.aem = {};
	}

	if('undefined' === typeof win.smg.aem.accessibility) {
		win.smg.aem.accessibility = {};
	}

	// Utility Script
	var UTIL = win.smg.aem.util;

	var namespace = win.smg.aem.accessibility;

	/**
	 * @name window.smg.aem.accessibility.checkbox
	 * @namespace
	 * @requires jQuery
	 * @requires namespace.js
	 * @requires window.smg.aem.static.js
	 * @requires window.smg.aem.util.js
	 * @requires window.smg.aem.event.js
	 */
	namespace.checkbox = (function() {
		/**
		 * @description Default Options
		 * @private
		 * @type {Object}
		 */
		var defParams = {
			targets : '[data-accessibility=\'checkbox\']',
			targetsValue : 'data-acc-checkbox-value',
			holder : 'data-acc-checkbox',
			holderTarget : 'data-acc-checkbox-target',
			onClass : 'data-acc-onclass'
		};
		return {
			init : function(container, args) {
				if (!(this.container = container).size()) return;

				this.opts = UTIL.def(defParams, (args || {}));

				this.setElements();
				this.setBindEvents();
			},
			setElements : function() {
				this.targets = this.container.find(this.opts.targets);
				this.holders = $('[' + this.opts.holder + ']');

				$.each(this.targets, $.proxy(function(idx, elm) {
					$(elm).attr(this.opts.targetsValue, $(elm).attr('checked'));
				}, this));
			},
			setBindEvents : function() {
				this.holders.on('click', $.proxy(this.onHolderClick, this));
				this.targets.on('change', $.proxy(this.onTargetChange, this));
			},
			unElements : function() {
				var target,
				targetInfo;
				$.each(this.targets, $.proxy(function(idx, elm) {
					target = $(elm);
					targetInfo = this.getTargetInfo(target);

					target.removeAttr('checked', 'checked');
					target.prop('checked', false);
					if (targetInfo.onClass) {
						targetInfo.holder.removeClass(targetInfo.onClass);
					}
				}, this));
				this.targets = [];
				this.holders = [];
			},
			unBindEvents : function() {
				this.holders.off('click', $.proxy(this.onHolderClick, this));
				this.targets.off('change', $.proxy(this.onTargetChange, this));
			},
			onHolderClick : function(e) {
				var target = $(e.currentTarget);
				target = $('[' + this.opts.holderTarget + '=\'' + target.attr(this.opts.holder) + '\']');

				if (target.size()) {
					target.trigger('click').focus();
				}
			},
			onTargetChange : function(e) {
				var target = $(e.currentTarget),
				targetInfo = this.getTargetInfo(target),
				holder = targetInfo.holder,
				onClass = targetInfo.onClass,
				isChecked = target.attr('checked');

				if (!isChecked) {
					target.attr('checked', 'checked');
					target.prop('checked', true);
					if (onClass) {
						holder.addClass(onClass);
					}
				} else {
					target.removeAttr('checked', 'checked');
					target.prop('checked', false);
					if (onClass) {
						holder.removeClass(onClass);
					}
				}
			},
			getTargetInfo : function(target) {
				target = $('[' + this.opts.holder + '=\'' + target.attr(this.opts.holderTarget) + '\']');

				if (target.size()) {
					return { holder : target, onClass : target.attr(this.opts.onClass) };
				}
				return { holder : '', onClass : '' };
			},
			destroy: function() {
				this.unBindEvents();
				this.unElements();
			},
			refresh : function(container, args) {
				container = container || this.container;

				this.destroy();
				this.init(container, args);
			}
		};
	})();

	$(function() {
		namespace.checkbox.init($('body'));
	});

})(window, window.jQuery);
/*!
 * samsung.com - Phase2 - Accessibility Placeholder Script
 * src : js/src/smg/aem/accessibility/placehoder/smg.aem.acc.placeholder.js
 *
 * @version 1.0.0
 * @since 2016.02.04
 */
;(function(win, $) {
	'use strict';

	if('undefined' === typeof win.smg) {
		win.smg = {};
	}

	if('undefined' === typeof win.smg.aem) {
		win.smg.aem = {};
	}

	if('undefined' === typeof win.smg.aem.accessibility) {
		win.smg.aem.accessibility = {};
	}

	// Utility Script
	var UTIL = win.smg.aem.util;

	var namespace = win.smg.aem.accessibility;

	/**
	 * @name window.smg.aem.accessibility.placeholder
	 * @namespace
	 * @requires jQuery
	 * @requires namespace.js
	 * @requires window.smg.aem.static.js
	 * @requires window.smg.aem.util.js
	 * @requires window.smg.aem.event.js
	 */
	namespace.placeholder = (function() {
		/**
		 * @description Default Options
		 * @private
		 * @type {Object}
		 */
		var defParams = {
			targets : '[data-accessibility=\'placeholder\']',
			targetsValue : 'data-acc-placeholder-value',
			holder : 'data-acc-placeholder',
			holderTarget : 'data-acc-placeholder-target',
			onClass : 'data-acc-onclass'
		};
		return {
			init : function(container, args) {
				if (!(this.container = container).size()) return;

				this.opts = UTIL.def(defParams, (args || {}));

				this.setElements();
				this.setBindEvents();
			},
			setElements : function() {
				this.targets = this.container.find(this.opts.targets);

				$.each(this.targets, $.proxy(function(idx, elm) {
					$(elm).attr(this.opts.targetsValue, $(elm).val());
				}, this));
			},
			setBindEvents : function() {
				this.targets.on('focus', $.proxy(this.onTargetsFocus, this))
							.on('blur', $.proxy(this.onTargetsBlur, this))
							.on('keydown keyup', $.proxy(this.onTargetsChange, this));
			},
			unElements : function() {
				$.each(this.targets, $.proxy(function(idx, elm) {
					$(elm).val($(elm).attr(this.opts.targetsValue));
				}, this));

				var target,
				targetInfo;
				$.each($('[' + this.opts.holder + ']'), $.proxy(function(idx, elm) {
					target = $(elm);
					targetInfo = this.getTargetInfo(target);

					if (targetInfo.onClass) {
						target.removeClass(targetInfo.onClass);
					} else {
						target.show();
					}
				}, this));

				this.targets = [];
			},
			unBindEvents : function() {
				this.targets.off('focus', $.proxy(this.onTargetsFocus, this))
							.off('blur', $.proxy(this.onTargetsBlur, this));
			},
			onTargetsFocus : function(e) {
				var target = $(e.currentTarget),
				targetInfo = this.getTargetInfo(target),
				holder = targetInfo.holder,
				onClass = targetInfo.onClass;

				if (!holder) {
					return;
				}

				if (target.val()) {
					if (onClass) {
						holder.addClass(onClass);
					} else {
						holder.css({ 'visibility' : 'hidden' });
					}
				}
			},
			onTargetsBlur : function(e) {
				var target = $(e.currentTarget),
				targetInfo = this.getTargetInfo(target),
				holder = targetInfo.holder,
				onClass = targetInfo.onClass;

				if (!holder) {
					return;
				}

				if (!target.val()) {
					if (onClass) {
						holder.removeClass(onClass);
					} else {
						holder.css({ 'visibility' : 'visible' });
					}
				}
			},
			onTargetsChange : function(e) {
				var target = $(e.currentTarget),
				targetInfo = this.getTargetInfo(target),
				holder = targetInfo.holder,
				onClass = targetInfo.onClass;

				if (!holder) {
					return;
				}

				if (target.val()) {
					if (onClass) {
						holder.addClass(onClass);
					} else {
						holder.css({ 'visibility' : 'hidden' });
					}
				} else {
					if (onClass) {
						holder.removeClass(onClass);
					} else {
						holder.css({ 'visibility' : 'visible' });
					}
				}
			},
			getTargetInfo : function(target) {
				target = $('[' + this.opts.holder + '=\'' + target.attr(this.opts.holderTarget) + '\']');

				if (target.size()) {
					return { holder : target, onClass : target.attr(this.opts.onClass) };
				}
				return { holder : '', onClass : '' };
			},
			destroy: function() {
				this.unBindEvents();
				this.unElements();
			},
			refresh : function(container, args) {
				container = container || this.container;

				this.destroy();
				this.init(container, args);
			}
		};
	})();

	$(function() {
		namespace.placeholder.init($('body'));
	});

})(window, window.jQuery);